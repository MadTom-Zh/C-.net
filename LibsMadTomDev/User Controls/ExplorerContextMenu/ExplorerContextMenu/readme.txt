

介于shell调用系统菜单在.net 6 wpf中无法兼容的问题，只能自己写一个了，优点在于极高的自定义；

菜单基本功能分类：
打开
用程序打开（发送），发送快捷方式，复制到网络位置等；
维护“用程序打开、发送”
剪切、复制、粘贴
创建快捷方式、删除、重名
属性

机制：
每程序按照程序文件路径确定独立的配置，所以不同程序使用此菜单时，出现的自定义内容可以不同；
新建文件部分，可以在配置目录中存放模板文件，新建时复制对应文件，如果不存在（图标也将空白），则创建空文件；

使用：
在需要激活此菜单的地方，将此菜单的原控件设为，如右击的菜单；
随后，根据自己的逻辑，激活和禁用对应的项，设定参数，如选中文件等；
最后将isopen设为true，从而打开菜单；

配置：
包括自有（标准）功能项目，可按条件显示、隐藏或禁用；
可增加的配置，可按组号分组，0为和打开同级，组之间用分割线分割；
最后一组只有一个维护功能项；

程序内配置：
在加载自定配置后，通过程序添加自定义项目；
对应的，项目的功能，需要通过代理连接到外部功能；
* 激活菜单时会设定参数，所以执行时，请读取菜单中的参数；


自有(标准)功能：
打开，使用shell，调用系统标准程序打开文件；
剪切，复制，粘贴，使用剪贴板；
创建快捷方式，在当前目录创建选中文件的快捷方式；
删除，将目标内容丢入回收站，如果是不能，则给出彻底删除的警告；
重名，执行父菜单的“重命名”代理功能；
属性，单个选中时调用系统属性窗口，多个时调用自定义窗口（可修改常规属性和时间）；








